<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

	<!-- 当设置在服务器端保存状态时，控制session保存的视图数量，-1表示没有限制, JSF默认为15 -->
	<context-param>
		<param-name>com.sun.faces.numberOfViewsInSession</param-name>
		<param-value>5</param-value>
	</context-param>

	<!-- If true, serialize server-side component state. -->
	<context-param>
		<param-name>com.sun.faces.serializeServerState</param-name>
		<param-value>false</param-value>
	</context-param>

	<!-- 配置JSF程序状态的保存位置，如果设置成server则保存在session中， 如果保存在client中可以保证服务器重启应用状态也不会丢失 -->
	<!-- 指示是在客户端（client）还是在服务器端（server）保存UI组件的状态和 session信息, server表示保存到服务器端,client表示保存到客户端, 默认为server。 -->
	<context-param>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>server</param-value>
	</context-param>
	
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Production</param-value>
	</context-param>

	<!-- 设置时间转化器的TimeZone,该参数指的是JSF的Datetimeconverter的默认时区是application server的系统时区,只要将application server的Timezone设置成我们所需要的时区就行了 -->
	<context-param>
		<param-name>javax.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- 该设置使JSF实现空字符串作为null的功能.用Bean Validation @NotNull也可以验证空字符串. -->
	<context-param>
		<param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- If enabled, the runtime will check for the existence of a resource library before checking for the resource itself. 
		If not found, an appropriate error message will be included in the log and in the view if ProjectStage is Development. -->
	<context-param>
		<param-name>com.sun.faces.enableMissingResourceLibraryDetection</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- primefaces的验证功能使用的参数 -->
	<context-param>
		<param-name>primefaces.CLIENT_SIDE_VALIDATION</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- 跳过注释,JSF生成最终页面不显示. -->
	<context-param>
		<param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
		<param-value>true</param-value>
	</context-param>

	<!-- 指定JSF映射资源时的默认后缀，默认为.jsp -->
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>

	<!-- primefaces相关配置 -->
	<context-param>
		<param-name>primefaces.THEME</param-name>
		<param-value>bootstrap</param-value>
	</context-param>

	<filter>
		<filter-name>PrimeFaces FileUpload Filter</filter-name>
		<filter-class>org.primefaces.webapp.filter.FileUploadFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>PrimeFaces FileUpload Filter</filter-name>
		<servlet-name>Faces Servlet</servlet-name>
	</filter-mapping>

	<!-- 编码过滤器 -->
	<filter>
		<filter-name>Character Encoding Filter</filter-name>
		<filter-class>org.zhaoqian.common.CharacterEncodingFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>Character Encoding Filter</filter-name>
		<servlet-name>/*</servlet-name>
	</filter-mapping>

	<!-- 验证码 -->
	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>150</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>60</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>40</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>5</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/Kaptcha.jpg</url-pattern>
	</servlet-mapping>

	<!-- JSF的核心控制器 FacesServlet -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	<!-- shiro相关配置. -->
	<!-- shiro:http://blogs.bytecode.com.au/glen/2012/12/29/using-apache-shiro-with-jsf.html -->
	<context-param>
		<param-name>shiroEnvironmentClass</param-name>
		<param-value>org.apache.shiro.web.env.IniWebEnvironment</param-value>
	</context-param>

	<filter>
		<filter-name>ShiroFilter</filter-name>
		<filter-class>org.apache.shiro.web.servlet.ShiroFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>ShiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>

	<listener>
		<listener-class>org.zhaoqian.security.shiro.environment.CdiEnvironmentLoaderListener</listener-class>
	</listener>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>/faces/home.jsf</welcome-file>
	</welcome-file-list>

</web-app>